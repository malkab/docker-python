# ¡ATENCIÓN! Esto hay que cambiarlo también en el FROM del Dockerfile
BASE_IMAGE_NAME=mcr.microsoft.com/devcontainers/python:3.12-bookworm
IMAGE_USER=vscode
IMAGE_NAME=python:3.12-devcontainer
IMAGE_SAVE_NAME=python_3_12_devcontainer
BASE_IMAGE_SAVE_NAME=python_3_12_bookworm

# Push
PUSH_REGISTRY=a.registry/a_user

# Ejecuta la imagen base para depurar
base_image_run:
	@docker run -ti --rm \
		--user $(IMAGE_USER):$(IMAGE_USER) \
		-v $(shell pwd):$(shell pwd) \
		--workdir $(shell pwd) \
		--entrypoint /bin/bash \
		$(BASE_IMAGE_NAME)

# Build
build:
	@docker build --force-rm -t $(IMAGE_NAME) .

# Ejecuta la imagen construída
run:
	@docker run -ti --rm \
		--user $(IMAGE_USER):$(IMAGE_USER) \
		-v $(shell pwd):$(shell pwd) \
		--workdir $(shell pwd) \
		--entrypoint /bin/bash \
		$(IMAGE_NAME)

# Subida
push:
	-@echo "Subiendo imagen $(PUSH_REGISTRY)/$(IMAGE_NAME), no olvidar hacer primero login"

	-@docker tag \
		$(IMAGE_NAME) \
		$(PUSH_REGISTRY)/$(IMAGE_NAME)

	-@docker push \
		$(PUSH_REGISTRY)/$(IMAGE_NAME)

# Respaldo a tar.gz de la imagen
save:
	@docker image save $(IMAGE_NAME) $(IMAGE_NAME) | gzip > \
		$(IMAGE_SAVE_NAME).tar.gz

	@docker image save $(BASE_IMAGE_NAME) $(BASE_IMAGE_NAME) | gzip > \
		$(BASE_IMAGE_SAVE_NAME).tar.gz

# Eliminar activos
clean:
	-@docker image rm $(IMAGE_NAME)

	-@docker image rm $(PUSH_REGISTRY)/$(IMAGE_NAME)
